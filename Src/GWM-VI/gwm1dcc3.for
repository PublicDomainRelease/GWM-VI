      MODULE GWM1DCC3
C     VERSION: 27AUG2013
      USE GWM_SUBS, ONLY: IGETUNIT
      USE GWM_STOP, ONLY:   GSTOP
      USE MF2005_UTLS, ONLY: URDCOM, URWORD
      IMPLICIT NONE
      PRIVATE
      PUBLIC::NLBR,GWM1DCC3AR,GWM1DCC3FM,GWM1DCC3OT
C
      INTEGER, PARAMETER :: I4B = SELECTED_INT_KIND(9)
      INTEGER, PARAMETER :: I2B = SELECTED_INT_KIND(4)
      INTEGER, PARAMETER :: SP = KIND(1.0)
      INTEGER, PARAMETER :: DP = KIND(1.0D0)
      INTEGER, PARAMETER :: LGT = KIND(.TRUE.)
C
	INTEGER(I4B),SAVE::NLBR
C
C      NLBR     -number of constraints required to place binary lower bounds
C 
C-----FOR ERROR HANDLING
      CHARACTER(LEN=200)::FLNM
      CHARACTER(LEN=20)::FILACT,FMTARG,ACCARG 
      INTEGER(I4B)::LLOC,ISTART,ISTOP,NDUM
      REAL(SP)::RDUM
C
      CONTAINS
C***********************************************************************
      SUBROUTINE GWM1DCC3AR(FNAMEN,IOUT,NFVAR,NEVAR,NBVAR,NV,NCON,
     &                      NGRIDS)
C***********************************************************************
C     VERSION: 21MAR2008
C     PURPOSE: READ INPUT FROM THE DECISION-VARIABLES CONSTRAINT FILE
C-----------------------------------------------------------------------
      USE GWM1BAS3, ONLY : ZERO,SMALLEPS,BIGINF
      USE GWM1DCV3, ONLY : FVMIN,FVMAX,FVBASE,FVDIR,EVMIN,EVMAX,FVNAME,
     1                     EVNAME,BVLIST,BVNLIST,GRDLOCDCV,FVCURRENT
      CHARACTER(LEN=200),INTENT(IN),DIMENSION(10)::FNAMEN
      INTEGER(I4B),INTENT(IN)::NFVAR,NEVAR,NBVAR,NGRIDS
      INTEGER(I4B),INTENT(INOUT)::NCON,NV
C-----LOCAL VARIABLES
      INTEGER(I4B)::IPRN,IPRNG,INMS,INMF,I,J,JJ,INI,G
      INTEGER(I4B)::LOCAT,ISTART,ISTOP,IOUT
      REAL(DP)::TPMN,TPMX,TFVREF,TEVMIN,TEVMAX
      CHARACTER(LEN=10)::TFVNAME,TEVNAME
      CHARACTER(LEN=200)::LINE
      LOGICAL(LGT)::NFOUND
      INTEGER(I4B),DIMENSION(NGRIDS)::NUNOPN
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C 
      IPRN = -1
      DO 100 G=1,NGRIDS
C-------OPEN FILE
        IF(FNAMEN(G).NE.' ')THEN
          NUNOPN(G)=IGETUNIT(10,200)
          LOCAT=NUNOPN(G)
          WRITE(IOUT,1000,ERR=990) LOCAT,FNAMEN(G)
          OPEN(UNIT=LOCAT,FILE=FNAMEN(G),ACTION='READ',ERR=999)
C
C---------CHECK FOR COMMENT LINES
          CALL URDCOM(LOCAT,IOUT,LINE)
C
C---------READ IPRN
          LLOC=1
          CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IPRNG,RDUM,IOUT,LOCAT)
          IF(IPRNG.EQ.0 .OR. IPRNG.EQ.1)THEN
            IPRN = MAX(IPRN,IPRNG)               ! USE MOST DETAILED ECHO
          ELSE
            WRITE(IOUT,2000,ERR=990)IPRNG        ! INVALID VALUE OF IPRN
            CALL GSTOP(' ')
          ENDIF
        ENDIF
  100 ENDDO
C
C-----SET LOWER BOUNDS TO INVALID VALUES TO SERVE AS FLAG
C 
      DO 110 J=1,NFVAR
        FVMIN(J)=-1.0
  110 ENDDO
      DO 120 J=1,NEVAR
        EVMIN(J)=-1.0
  120 ENDDO
C
C----READ IN MINIMUM, MAXIMUM, AND REFERENCE FLOW RATES
      DO 210 I=1,NFVAR
        LOCAT=NUNOPN(GRDLOCDCV(I))  
        READ(LOCAT,'(A)',ERR=991)LINE
        LLOC=1
        CALL URWORD(LINE,LLOC,INMS,INMF,0,NDUM,RDUM,IOUT,LOCAT)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,NDUM,RDUM,IOUT,LOCAT)
        TPMN = REAL(RDUM,DP)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,NDUM,RDUM,IOUT,LOCAT)
        TPMX = REAL(RDUM,DP)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,NDUM,RDUM,IOUT,LOCAT)
        TFVREF = REAL(RDUM,DP)
C
C-------CHECK THAT NAME OF DECISION VARIABLE IS VALID 
        NFOUND=.TRUE.
        TFVNAME=LINE(INMS:INMF)
        DO 200 J=1,NFVAR
          IF(FVNAME(J).EQ.TFVNAME)THEN
            NFOUND=.FALSE.
            JJ = J                               ! JJ IS THE VARIABLE NUMBER
            EXIT                                 ! LEAVE THE LOOP
          ENDIF
  200   ENDDO
        IF(NFOUND)THEN
          WRITE(IOUT,3000,ERR=990)TFVNAME        ! VARIABLE NAME WAS NOT FOUND
          CALL GSTOP(' ')
        ENDIF
C 
C-------CHECK THAT THIS DECISION VARIABLE HAS NOT ALREADY BEEN SET
        IF(FVMIN(JJ).GE.ZERO)THEN
          WRITE(IOUT,3100,ERR=990)TFVNAME        ! BOUNDS HAVE BEEN ASSIGNED
          CALL GSTOP(' ')
        ENDIF
C
C-------PROCESS FVMIN AND FVMAX, THE UPPER AND LOWER BOUNDS ON FLOW
        IF(TPMN.LT.ZERO)THEN
          WRITE(IOUT,3200,ERR=990)TFVNAME        ! LOWER BOUND INVALID
          CALL GSTOP(' ')
        ELSEIF(TPMN.GT.ZERO .AND. NBVAR.EQ.0)THEN
          WRITE(IOUT,3300,ERR=990)TFVNAME        ! LOWER BOUND MUST BE 0
          TPMN = ZERO
        ENDIF
        IF(TPMX.GT.BIGINF)THEN
          WRITE(IOUT,3400,ERR=990)TFVNAME,BIGINF ! UPPER BOUND INVALID
          CALL GSTOP(' ')
        ELSEIF(TPMX.LT.TPMN)THEN
          WRITE(IOUT,3500,ERR=990)TFVNAME        ! INVALID RELATION
          CALL GSTOP(' ')
        ELSEIF(TPMX.EQ.TPMN)THEN                 ! SEPARATE BOUNDS FROM ZERO
          IF(TPMX.GT.ZERO)THEN
            TPMX=TPMX+TPMX*SQRT(SMALLEPS)    
          ELSEIF(TPMX.EQ.ZERO)THEN
            TPMX=SQRT(SMALLEPS)    
          ENDIF  
        ENDIF
        FVMIN(JJ)=TPMN
        FVMAX(JJ)=TPMX
C
C-------PROCESS FVREF, THE REFERENCE FLOW RATES
        IF(TFVREF.LT.ZERO)WRITE(IOUT,3600,ERR=990)TFVNAME
        IF(TFVREF.LT.TPMN.AND.NBVAR.EQ.0)WRITE(IOUT,3700,ERR=990)TFVNAME
        IF(TFVREF.GT.TPMX)WRITE(IOUT,3800,ERR=990)TFVNAME
        FVBASE(JJ)=TFVREF                        ! STORE THE REFERENCE FLOW RATE
        IF(FVDIR(JJ).EQ.2)FVBASE(JJ)=-FVBASE(JJ) ! SWITCH SIGN FOR WITHDRAWALS
        FVCURRENT(JJ) = FVBASE(JJ)
  210 ENDDO
C
C-----READ IN MINIMUM AND MAXIMUM EXTERNAL-VARIABLE RATES
      DO 310 I=1,NEVAR
        LOCAT=NUNOPN(GRDLOCDCV(NFVAR+I))
        READ(LOCAT,'(A)',ERR=991)LINE
        LLOC=1
        CALL URWORD(LINE,LLOC,INMS,INMF,0,NDUM,RDUM,IOUT,LOCAT)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,NDUM,RDUM,IOUT,LOCAT)
        TEVMIN = REAL(RDUM,DP)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,NDUM,RDUM,IOUT,LOCAT)
        TEVMAX = REAL(RDUM,DP)
C
C-------CHECK THAT NAME OF DECISION VARIABLE IS VALID 
        NFOUND=.TRUE.
        TEVNAME=LINE(INMS:INMF)
        DO 300 J=1,NEVAR
          IF(EVNAME(J).EQ.TEVNAME)THEN
            NFOUND=.FALSE.
            JJ = J                               ! JJ IS THE VARIABLE NUMBER
            EXIT                                 ! LEAVE THE LOOP
          ENDIF
  300   ENDDO
        IF(NFOUND)THEN
          WRITE(IOUT,4000,ERR=990)TEVNAME        ! VARIABLE NAME WAS NOT FOUND
          CALL GSTOP(' ')
        ENDIF
C
C-------CHECK THAT THIS DECISION VARIABLE HAS NOT ALREADY BEEN SET
        IF(EVMIN(JJ).GE.ZERO)THEN
          WRITE(IOUT,3100,ERR=990)TEVNAME        ! BOUNDS HAVE BEEN ASSIGNED
          CALL GSTOP(' ')
        ENDIF
C
C-----PROCESS EVMIN AND EVMAX, THE UPPER AND LOWER BOUNDS ON EXTERNAL VARIABLES
        IF(TEVMIN.LT.ZERO)THEN
          WRITE(IOUT,4100,ERR=990)TEVNAME        ! LOWER BOUND INVALID
          CALL GSTOP(' ')
        ELSEIF(TEVMIN.GT.ZERO .AND. NBVAR.EQ.0)THEN
          WRITE(IOUT,4200,ERR=990)TEVNAME
          TEVMIN = ZERO
        ENDIF
        IF(TEVMAX.GT.BIGINF)THEN
          WRITE(IOUT,4300,ERR=990)TEVNAME,BIGINF ! UPPER BOUND INVALID
          CALL GSTOP(' ')
        ELSEIF(TEVMAX.LT.TEVMIN)THEN
          WRITE(IOUT,4400,ERR=990)TEVNAME        ! INVALID RELATION
          CALL GSTOP(' ')
        ELSEIF(TEVMAX.EQ.TEVMIN)THEN
          TEVMAX=TEVMAX+TEVMAX*SQRT(SMALLEPS)    ! SEPARATE BOUNDS FROM ZERO
          IF(TEVMAX.GT.ZERO)THEN
            TEVMAX=TEVMAX+TEVMAX*SQRT(SMALLEPS)    
          ELSEIF(TEVMAX.EQ.ZERO)THEN
            TEVMAX=SQRT(SMALLEPS)    
          ENDIF  
        ENDIF
        EVMIN(JJ)=TEVMIN
        EVMAX(JJ)=TEVMAX
  310 ENDDO
C
      NLBR = 0                            
      IF(NBVAR.GT.0)THEN
C-------COUNT THE NUMBER OF LOWER BOUND CONSTRAINTS TO BE IMPOSED
        DO 410 I=1,NBVAR
          DO 400 J=1,BVNLIST(I)
            INI = BVLIST(I,J)                    ! DETERMINE VARIABLE NUMBER
            IF(INI.LE.NFVAR)THEN                 ! THIS IS A FLOW VARIABLE
              IF(FVMIN(INI).GT.ZERO)NLBR = NLBR + 1 ! INCREMENT NUMBER OF CONSTRAINTS
            ELSE                                 ! THIS IS AN EXTERNAL VARIABLE
              IF(EVMIN(INI-NFVAR).GT.ZERO)NLBR = NLBR + 1 ! INCREMENT NUMBER OF CONSTRAINTS
            ENDIF
  400     ENDDO
  410   ENDDO
C
C-------ADD THE LOWER BOUND CONSTRAINTS AND BINARY DEFINITION CONSTRAINTS
        NCON = NCON + NLBR+NBVAR                 ! INCREMENT CONSTRAINT NUMBER
        NV   = NV   + NLBR+NBVAR                 ! ADD CONSTRAINT SLACKS TO NV
      ENDIF
C
C-----WRITE INFORMATION TO OUTPUT FILE
      IF(IPRN.EQ.1)THEN
        IF(NFVAR.GE.1)THEN
        WRITE(IOUT,5000,ERR=990)                 ! WRITE FLOW-RATE VARIABLES
        DO 500 I=1,NFVAR
          WRITE(IOUT,5100,ERR=990)I,FVNAME(I),FVMIN(I),FVMAX(I),
     &                            ABS(FVBASE(I))
  500   ENDDO
        ENDIF
        IF(NEVAR.GE.1)THEN
          WRITE(IOUT,5200,ERR=990)               ! WRITE EXTERNAL VARIABLES
          DO 510 I=1,NEVAR
            WRITE(IOUT,5300,ERR=990)I,EVNAME(I),EVMIN(I),EVMAX(I)
  510     ENDDO
        ENDIF
      ENDIF
C
C-----CLOSE FILE
      WRITE(IOUT,6000,ERR=990)
      DO I=1,NGRIDS
        CLOSE(NUNOPN(I))
      ENDDO
C
      RETURN
C
 1000 FORMAT(1X,/1X,'OPENING DECISION-VARIABLE CONSTRAINTS FILE',
     1  ' ON UNIT ',I4,':',/1X,A200)
 2000 FORMAT(1X,/1X,'PROGRAM STOPPED. IPRN MUST BE EQUAL TO 0 OR 1: ',
     1  I4)
 3000 FORMAT(1X,/1X,'PROGRAM STOPPED. ',A10,' WAS NOT DEFINED AS A', 
     1  ' VARIABLE NAME (FVNAME)',/,' IN THE DECISION-VARIABLE FILE.')
 3100 FORMAT(1X,/1X,'PROGRAM STOPPED. ',A10,' ALREADY ASSIGNED', 
     1   /,' IN THE DECISION-VARIABLE FILE.')
 3200 FORMAT(1X,/1X,'PROGRAM STOPPED. WELL ',A10,' HAS A MINIMUM',
     1  ' SPECIFIED',/,' FLOW RATE (FVMIN) THAT IS LESS THAN ZERO.',
     2  ' MINIMUM',/,' FLOW RATE MUST BE GREATER THAN OR EQUAL TO',
     3  ' ZERO.')
 3300 FORMAT(1X,/1X,' VARIABLE ',A10,' HAS A NON-ZERO LOWER BOUND',
     1  ' SPECIFIED',/,' BUT NO BINARY VARIABLES ARE DEFINED',
     2  /,' FVMIN REASSIGNED A VALUE OF ZERO ')
 3400 FORMAT(1X,/1X,'PROGRAM STOPPED. WELL ',A10,' HAS A MAXIMUM',
     1  ' SPECIFIED',/,' FLOW RATE (FVMAX) THAT IS GREATER THAN THE',
     2  ' VALUE',/,' ASSIGNED TO MACHINE INFINITY IN GWM: ',D5.2)
 3500 FORMAT(1X,/1X,'PROGRAM STOPPED. WELL ',A10,' HAS A MINIMUM',
     1  ' SPECIFIED',/,' FLOW RATE (FVMIN) THAT IS GREATER THAN THE',
     2  ' MAXIMUM',/,' SPECIFIED FLOW RATE (FVMAX).')
 3600 FORMAT(1X,/1X,'CAUTION: WELL ',A10,' HAS A SPECIFIED',
     1  ' REFERENCE',/,' FLOW RATE (FVREF) THAT IS LESS THAN ZERO.')
 3700 FORMAT(1X,/1X,'CAUTION: WELL ',A10,' HAS A SPECIFIED',
     1  ' REFERENCE',/,' FLOW RATE (FVREF) THAT IS LESS THAN THE',
     2  ' MINIMUM',/,' SPECIFIED FLOW RATE (FVMIN).')
 3800 FORMAT(1X,/1X,'CAUTION: WELL ',A10,' HAS A SPECIFIED',
     1  ' REFERENCE',/,' FLOW RATE (FVREF) THAT IS GREATER THAN',
     2  ' THE MAXIMUM',/,' SPECIFIED FLOW RATE (FVMAX).')
 4000 FORMAT(1X,/1X,'PROGRAM STOPPED. ',A10,' WAS NOT DEFINED AS A',
     1  ' VARIABLE NAME (EVNAME)',/,' IN THE DECISION-VARIABLE FILE.')
 4100 FORMAT(1X,/1X,'PROGRAM STOPPED. VARIABLE ',A10,' HAS A MINIMUM',
     1  ' SPECIFIED',/,' EXTERNAL RATE (EVMIN) THAT IS LESS THAN ZERO.',
     2  ' MINIMUM',/,' EXTERNAL RATE MUST BE GREATER THAN OR EQUAL TO',
     3  ' ZERO.')
 4200 FORMAT(1X,/1X,' VARIABLE ',A10,' HAS A NON-ZERO LOWER BOUND',
     1  ' SPECIFIED',/,' BUT NO BINARY VARIABLES ARE DEFINED',
     2  /,' EVMIN REASSIGNED A VALUE OF ZERO ')
 4300 FORMAT(1X,/1X,'PROGRAM STOPPED. WELL ',A10,' HAS A MAXIMUM',
     1  ' SPECIFIED',/,' EXTNERAL RATE (EVMAX) THAT IS GREATER THAN THE',
     2  ' VALUE',/,' ASSIGNED TO MACHINE INFINITY IN GWM: ',D5.2)
 4400 FORMAT(1X,/1X,'PROGRAM STOPPED. WELL ',A10,' HAS A MINIMUM',
     1  ' SPECIFIED',/,' EXTERNAL RATE (EVMIN) THAT IS GREATER THAN THE',
     2  ' MAXIMUM',/,' SPECIFIED EXTERNAL RATE (EVMAX).')
 5000 FORMAT(/,T2,'FLOW RATE VARIABLES:',/,T25,'MINIMUM',T40,
     1  'MAXIMUM',T55,'REFERENCE',/,T3,'NUMBER',T12,'NAME',T25,
     2  'FLOW RATE',T40,'FLOW RATE',T55,'FLOW RATE',/,
     3  '---------------------------------------------------',
     4  '-------------')
 5100 FORMAT(I5,6X,A10,T23,ES11.3,T38,ES11.3,T53,ES11.3)
 5200 FORMAT(/,T2,'EXTERNAL VARIABLES:',/,T25,'MINIMUM',T40,
     1  'MAXIMUM',/,T3,'NUMBER',T12,'NAME',T26,'VALUE',T41,
     2  'VALUE',/,'---------------------------------------',
     3  '----------')
 5300 FORMAT(I5,6X,A10,T23,D11.3,T38,D11.3)
 6000 FORMAT(/,1X,'CLOSING DECISION-VARIABLE CONSTRAINTS FILE',/)
C
      RETURN
C
C-----ERROR HANDLING
  990 CONTINUE
C-----FILE-WRITING ERROR
      INQUIRE(IOUT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9900)TRIM(FLNM),IOUT,FMTARG,ACCARG,FILACT
 9900 FORMAT(/,1X,'*** ERROR WRITING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1DCC3AR)')
      CALL GSTOP(' ')
C
  991 CONTINUE
C-----FILE-READING ERROR
      INQUIRE(LOCAT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9910)TRIM(FLNM),LOCAT,FMTARG,ACCARG,FILACT
      WRITE(IOUT,9910)TRIM(FLNM),LOCAT,FMTARG,ACCARG,FILACT
 9910 FORMAT(/,1X,'*** ERROR READING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1DCC3AR)')
      CALL GSTOP(' ')
C
  999 CONTINUE
C-----FILE-OPENING ERROR
      INQUIRE(LOCAT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9990)TRIM(FLNM),LOCAT,'OLD',FMTARG,ACCARG,FILACT
      WRITE(IOUT,9990)TRIM(FLNM),LOCAT,'OLD',FMTARG,ACCARG,
     &                 FILACT
 9990 FORMAT(/,1X,'*** ERROR OPENING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE STATUS: ',A,/
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1DCC3AR)')
      CALL GSTOP(' ')
C
      END SUBROUTINE GWM1DCC3AR
C
C
C***********************************************************************
      SUBROUTINE GWM1DCC3FM(RSTRT,NSLK)
C***********************************************************************
C     VERSION: 17MAY2011
C     PURPOSE: PLACE CONSTRAINTS RELATED TO BINARY VARIABLES
C-----------------------------------------------------------------------
      USE GWM1BAS3, ONLY : ZERO,ONE
      USE GWM1DCV3, ONLY : NFVAR,NEVAR,NBVAR,FVMAX,FVMIN,EVMAX,EVMIN,
     &                     BVNLIST,BVLIST,EVNAME,FVNAME
      USE GWM1RMS3, ONLY : AMAT,RHS,
     &                     RHSIN,RHSINF,RANGENAME,RANGENAMEF,NDV,CONTYP
      INTEGER(I4B),INTENT(IN)::RSTRT,NSLK
C-----LOCAL VARIABLES
      REAL(DP)::BIGX,VMIN
      INTEGER(I4B)::I,IEV,J,INI,CSTRT,IROW,ICOL
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
      IF(NBVAR.EQ.0)RETURN
C
      CSTRT = NFVAR + NEVAR                      ! DETERMINE COLUMN START POINT
C-----IMPOSE CONSTRAINTS OF FORM:  -Q + QLOW*X <= 0
C     LOWER BOUND ON FLOW RATES IF QLOW IS NOT ZERO
      IROW = RSTRT-1
      DO 110 I=1,NBVAR
        ICOL   = CSTRT + I                       ! DETERMINE COLUMN FOR BINARY
        DO 100 J=1,BVNLIST(I)
          INI = BVLIST(I,J)                      ! DETERMINE VARIABLE NUMBER
          IF(INI.LE.NFVAR)THEN                   ! THIS IS A FLOW VARIABLE
            VMIN = FVMIN(INI)                    ! ASSIGN THE MINIMUM
          ELSE                                   ! THIS IS AN EXTERNAL VARIABLE
            VMIN = EVMIN(INI-NFVAR)              ! ASSIGN THE MINIMUM
          ENDIF
          IF(VMIN.GT.ZERO)THEN                   ! NEED A CONSTRAINT
            IROW  = IROW + 1                     ! DETERMINE ROW NUMBER
            AMAT(IROW,INI)   = -ONE              ! ASSIGN COEFFICIENT
            AMAT(IROW,ICOL)  = VMIN              ! ASSIGN LOWER BOUND
            AMAT(IROW,NSLK)  = ONE               ! ASSIGN SLACK
            RHS (IROW)       = ZERO              ! ASSIGN RIGHT HAND SIDE
            RHSIN(IROW)      = ZERO              ! STORE THE RHS FOR OUTPUT
            CONTYP(IROW)=1                       ! SET FOR RANGE OUTPUT
          ENDIF
  100   ENDDO
  110 ENDDO
C
C-----IMPOSE CONSTRAINT OF FORM: -SUM(Q) + BIG*X >= ZERO
C     TO FORCE BINARY TO ONE IF FLOW RATE VARIABLE ACTIVE
C-----FOR CODE COMPATABILITY,
C     THESE CONSTRAINTS MUST BE LOCATED AS THE LAST ROWS IN THE MATRIX
      DO 210 I=1,NBVAR
        IROW  = IROW + 1                         ! DETERMINE ROW NUMBER
        ICOL  = CSTRT + I                        ! DETERMINE COLUMN FOR BINARY
        BIGX  = ZERO                             ! INITIALIZE THE LARGE NUMBER
        DO 200 J=1,BVNLIST(I)                    ! LOOP OVER VARIABLES IN LIST
          INI = BVLIST(I,J)                      ! IDENTIFY COLUMN NUMBER
          AMAT(IROW,INI)   = -ONE                ! ASSIGN COEFFICIENT TO A
          IF(INI.LE.NFVAR)THEN                   ! THIS IS A FLOW VARIABLE
            BIGX = BIGX + FVMAX(INI)
          ELSE                                   ! THIS IS AN EXTERNAL VARIABLE
            BIGX = BIGX + EVMAX(INI-NFVAR)             
          ENDIF
  200   ENDDO
        BIGX = BIGX*2.0D0                        ! MAKE BIGX LARGER THAN SUM OF
        AMAT(IROW,ICOL)    = BIGX                !   UPPER BOUNDS
        AMAT(IROW,NSLK)    = -ONE                ! ASSIGN SLACK COEFFICIENT
        RHS (IROW)         = ZERO                ! ASSIGN RIGHT HAND SIDE
        RHSIN(IROW)        = ZERO                ! STORE THE RHS FOR OUTPUT
        CONTYP(IROW)=1                           ! SET FOR RANGE OUTPUT
  210 ENDDO
C
      RETURN
      END SUBROUTINE GWM1DCC3FM
C
C
C*************************************************************************
      SUBROUTINE GWM1DCC3OT(RSTRT)
C*************************************************************************
C     VERSION: 21MAR2008
C     PURPOSE: WRITE THE STATUS OF BINDING VARIABLE BOUND CONSTRAINTS 
C---------------------------------------------------------------------------
      USE GWM1BAS3, ONLY : ZERO,ONE
      USE GWM1DCV3, ONLY : NFVAR,NEVAR,NBVAR,FVNAME,FVMAX,FVMIN,
     &                     EVNAME,EVMAX,EVMIN,BVNAME,BVNLIST,BVLIST
      USE GWM1RMS3, ONLY : CST,BNDS,RHS,RANGENAME,NDV
      USE GWM1BAS3, ONLY : GWM1BAS3CS
      INTEGER(I4B),INTENT(IN)::RSTRT
C-----LOCAL VARIABLES
      INTEGER(I4B)::I,J,IEV,ROW,INI
      CHARACTER(LEN=25)::CTYPE
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
      DO 100 I=1,NFVAR                           ! CHECK FLOW VARIABLE BOUNDS
        IF(NBVAR.GT.1.AND.
     &    (ABS(CST(I)).EQ.FVMIN(I)))THEN  ! VARIABLE AT LOWER BOUND
          CTYPE = 'Minimum Flow Rate'
          CALL GWM1BAS3CS(CTYPE,FVNAME(I),ZERO,ZERO,ZERO,0,0) 
        ELSEIF(ABS(CST(I)).EQ.FVMAX(I))THEN   ! VARIABLE AT UPPER BOUND
          CTYPE = 'Maximum Flow Rate'
          CALL GWM1BAS3CS(CTYPE,FVNAME(I),ZERO,ZERO,ZERO,0,0) 
        ENDIF
  100 ENDDO
C
      IEV=NFVAR
      DO 200 I=1,NEVAR                           ! CHECK EXTERNAL VARIABLE BOUNDS
	  IEV=IEV+1
        IF(NBVAR.GT.1.AND.
     &    (ABS(CST(IEV)).EQ.EVMIN(I)))THEN  ! VARIABLE AT LOWER BOUND
          CTYPE = 'Minimum External Flow Rate'
          CALL GWM1BAS3CS(CTYPE,EVNAME(I),ZERO,ZERO,ZERO,0,0) 
        ELSEIF(ABS(CST(IEV)).EQ.EVMAX(I))THEN   ! VARIABLE AT UPPER BOUND
          CTYPE = 'Maximum External Flow Rate'
          CALL GWM1BAS3CS(CTYPE,EVNAME(I),ZERO,ZERO,ZERO,0,0) 
        ENDIF
  200 ENDDO

      RETURN
      END SUBROUTINE GWM1DCC3OT
C
C
      END MODULE GWM1DCC3